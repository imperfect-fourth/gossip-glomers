2025-04-20 18:03:21,964{GMT}	INFO	[jepsen test runner] jepsen.core: Command line:
lein run test -w broadcast --bin fly-io --node-count 1 --time-limit 20 --rate 10
2025-04-20 18:03:22,055{GMT}	INFO	[jepsen test runner] jepsen.core: Running test:
{:args []
 :remote
 #jepsen.control.retry.Remote{:remote #jepsen.control.scp.Remote{:cmd-remote #jepsen.control.sshj.SSHJRemote{:concurrency-limit 6,
                                                                                                             :conn-spec nil,
                                                                                                             :client nil,
                                                                                                             :semaphore nil},
                                                                 :conn-spec nil},
                              :conn nil}
 :log-net-send false
 :node-count 1
 :availability nil
 :max-txn-length 4
 :concurrency 1
 :db
 #object[maelstrom.db$db$reify__16612
         "0x7f913c47"
         "maelstrom.db$db$reify__16612@7f913c47"]
 :max-writes-per-key 16
 :leave-db-running? false
 :name "broadcast"
 :logging-json? false
 :start-time
 #object[org.joda.time.DateTime "0x4c18b432" "2025-04-20T18:03:21.940+05:30"]
 :nemesis-interval 10
 :net
 #object[maelstrom.net$jepsen_net$reify__15721
         "0x4b954cbb"
         "maelstrom.net$jepsen_net$reify__15721@4b954cbb"]
 :client
 #object[maelstrom.workload.broadcast$client$reify__17142
         "0xbec2d81"
         "maelstrom.workload.broadcast$client$reify__17142@bec2d81"]
 :barrier
 #object[java.util.concurrent.CyclicBarrier
         "0x5f04449a"
         "java.util.concurrent.CyclicBarrier@5f04449a"]
 :log-stderr false
 :pure-generators true
 :ssh {:dummy? true}
 :rate 10.0
 :checker
 #object[jepsen.checker$compose$reify__11089
         "0x5634c26c"
         "jepsen.checker$compose$reify__11089@5634c26c"]
 :argv
 ("test"
  "-w"
  "broadcast"
  "--bin"
  "fly-io"
  "--node-count"
  "1"
  "--time-limit"
  "20"
  "--rate"
  "10")
 :nemesis
 (jepsen.nemesis.ReflCompose
  {:fm {:start-partition 0,
        :stop-partition 0,
        :kill 1,
        :start 1,
        :pause 1,
        :resume 1},
   :nemeses [#unprintable "jepsen.nemesis.combined$partition_nemesis$reify__16905@37a5ac85"
             #unprintable "jepsen.nemesis.combined$db_nemesis$reify__16886@5d4f0fd5"]})
 :nodes ["n0"]
 :test-count 1
 :latency {:mean 0, :dist :constant}
 :bin "fly-io"
 :generator
 #object[jepsen.util.Forgettable
         "0x22f3b213"
         ((jepsen.generator.Synchronize
           {:gen (jepsen.generator.TimeLimit
                  {:limit 20000000000,
                   :cutoff nil,
                   :gen (jepsen.generator.Any
                         {:gens [(jepsen.generator.OnThreads
                                  {:f #{:nemesis},
                                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__12077
                                                           "0x41d1bcbd"
                                                           "jepsen.generator.context$make_thread_filter$lazy_filter__12077@41d1bcbd"],
                                   :gen nil})
                                 (jepsen.generator.OnThreads
                                  {:f #jepsen.generator.context.AllBut{:element :nemesis},
                                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__12077
                                                           "0x6ba6f4e7"
                                                           "jepsen.generator.context$make_thread_filter$lazy_filter__12077@6ba6f4e7"],
                                   :gen (jepsen.generator.Stagger
                                         {:dt 200000000,
                                          :next-time nil,
                                          :gen (jepsen.generator.Mix
                                                {:i 1,
                                                 :gens [({:f :broadcast,
                                                          :value 0}
                                                         {:f :broadcast,
                                                          :value 1}
                                                         {:f :broadcast,
                                                          :value 2}
                                                         {:f :broadcast,
                                                          :value 3}
                                                         {:f :broadcast,
                                                          :value 4}
                                                         {:f :broadcast,
                                                          :value 5}
                                                         {:f :broadcast,
                                                          :value 6}
                                                         {:f :broadcast,
                                                          :value 7}
                                                         ...)
                                                        ({:f :read}
                                                         {:f :read}
                                                         {:f :read}
                                                         {:f :read}
                                                         {:f :read}
                                                         {:f :read}
                                                         {:f :read}
                                                         {:f :read}
                                                         ...)]})})})]})})})
          (jepsen.generator.Synchronize
           {:gen (jepsen.generator.OnThreads
                  {:f #{:nemesis},
                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__12077
                                           "0x685efb22"
                                           "jepsen.generator.context$make_thread_filter$lazy_filter__12077@685efb22"],
                   :gen ()})})
          (jepsen.generator.Synchronize
           {:gen {:type :log, :value "Waiting for recovery..."}})
          (jepsen.generator.Synchronize {:gen {:type :sleep, :value 10}})
          (jepsen.generator.Synchronize
           {:gen (jepsen.generator.OnThreads
                  {:f #jepsen.generator.context.AllBut{:element :nemesis},
                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__12077
                                           "0x24a696c0"
                                           "jepsen.generator.context$make_thread_filter$lazy_filter__12077@24a696c0"],
                   :gen (jepsen.generator.EachThread
                         {:fresh-gen {:f :read, :final? true},
                          :context-filters #object[clojure.core$promise$reify__8621
                                                   "0x78fb4f7f"
                                                   {:status :pending, :val nil}],
                          :gens {}})})}))]
 :log-net-recv false
 :os
 #object[maelstrom.net$jepsen_os$reify__15724
         "0x6a7c1725"
         "maelstrom.net$jepsen_os$reify__15724@6a7c1725"]
 :time-limit 20
 :workload :broadcast
 :consistency-models [:strict-serializable]
 :topology :grid}

2025-04-20 18:03:23,700{GMT}	INFO	[jepsen node n0] maelstrom.net: Starting Maelstrom network
2025-04-20 18:03:23,701{GMT}	INFO	[jepsen test runner] jepsen.db: Tearing down DB
2025-04-20 18:03:23,702{GMT}	INFO	[jepsen test runner] jepsen.db: Setting up DB
2025-04-20 18:03:23,704{GMT}	INFO	[jepsen node n0] maelstrom.service: Starting services: (lin-kv lin-tso lww-kv seq-kv)
2025-04-20 18:03:23,706{GMT}	INFO	[jepsen node n0] maelstrom.db: Setting up n0
2025-04-20 18:03:23,706{GMT}	INFO	[jepsen node n0] maelstrom.process: launching fly-io []
2025-04-20 18:03:23,734{GMT}	INFO	[jepsen test runner] jepsen.core: Relative time begins now
2025-04-20 18:03:23,751{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2025-04-20 18:03:23,771{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 0 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:23,833{GMT}	INFO	[jepsen worker 0] jepsen.util: 1	:invoke	:read	nil
2025-04-20 18:03:23,847{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 1 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:23,895{GMT}	INFO	[jepsen worker 0] jepsen.util: 2	:invoke	:broadcast	0
2025-04-20 18:03:23,918{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 2 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 0, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 0, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:24,019{GMT}	INFO	[jepsen worker 0] jepsen.util: 3	:invoke	:broadcast	1
2025-04-20 18:03:24,032{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 3 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 1, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 1, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:24,156{GMT}	INFO	[jepsen worker 0] jepsen.util: 4	:invoke	:read	nil
2025-04-20 18:03:24,168{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 4 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:24,170{GMT}	INFO	[jepsen worker 0] jepsen.util: 5	:invoke	:read	nil
2025-04-20 18:03:24,183{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 5 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:24,191{GMT}	INFO	[jepsen worker 0] jepsen.util: 6	:invoke	:read	nil
2025-04-20 18:03:24,204{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 6 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:24,234{GMT}	INFO	[jepsen worker 0] jepsen.util: 7	:invoke	:broadcast	2
2025-04-20 18:03:24,248{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 7 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 2, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 2, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:24,344{GMT}	INFO	[jepsen worker 0] jepsen.util: 8	:invoke	:broadcast	3
2025-04-20 18:03:24,354{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 8 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 3, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 3, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:24,413{GMT}	INFO	[jepsen worker 0] jepsen.util: 9	:invoke	:read	nil
2025-04-20 18:03:24,424{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 9 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:24,514{GMT}	INFO	[jepsen worker 0] jepsen.util: 10	:invoke	:broadcast	4
2025-04-20 18:03:24,524{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 10 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 4, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 4, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:24,667{GMT}	INFO	[jepsen worker 0] jepsen.util: 11	:invoke	:broadcast	5
2025-04-20 18:03:24,678{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 11 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 5, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 5, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:24,692{GMT}	INFO	[jepsen worker 0] jepsen.util: 12	:invoke	:read	nil
2025-04-20 18:03:24,704{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 12 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:24,768{GMT}	INFO	[jepsen worker 0] jepsen.util: 13	:invoke	:broadcast	6
2025-04-20 18:03:24,780{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 13 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 6, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 6, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:24,808{GMT}	INFO	[jepsen worker 0] jepsen.util: 14	:invoke	:read	nil
2025-04-20 18:03:24,821{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 14 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:24,968{GMT}	INFO	[jepsen worker 0] jepsen.util: 15	:invoke	:broadcast	7
2025-04-20 18:03:24,979{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 15 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 7, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 7, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:24,986{GMT}	INFO	[jepsen worker 0] jepsen.util: 16	:invoke	:read	nil
2025-04-20 18:03:24,999{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 16 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:25,055{GMT}	INFO	[jepsen worker 0] jepsen.util: 17	:invoke	:read	nil
2025-04-20 18:03:25,070{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 17 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:25,074{GMT}	INFO	[jepsen worker 0] jepsen.util: 18	:invoke	:broadcast	8
2025-04-20 18:03:25,085{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 18 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 8, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 8, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:25,217{GMT}	INFO	[jepsen worker 0] jepsen.util: 19	:invoke	:read	nil
2025-04-20 18:03:25,227{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 19 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:25,282{GMT}	INFO	[jepsen worker 0] jepsen.util: 20	:invoke	:broadcast	9
2025-04-20 18:03:25,291{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 20 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 9, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 9, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:25,455{GMT}	INFO	[jepsen worker 0] jepsen.util: 21	:invoke	:broadcast	10
2025-04-20 18:03:25,464{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 21 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 10, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 10, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:25,582{GMT}	INFO	[jepsen worker 0] jepsen.util: 22	:invoke	:read	nil
2025-04-20 18:03:25,591{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 22 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:25,611{GMT}	INFO	[jepsen worker 0] jepsen.util: 23	:invoke	:broadcast	11
2025-04-20 18:03:25,618{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 23 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 11, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 11, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:25,714{GMT}	INFO	[jepsen worker 0] jepsen.util: 24	:invoke	:broadcast	12
2025-04-20 18:03:25,723{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 24 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 12, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 12, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:25,752{GMT}	INFO	[jepsen worker 0] jepsen.util: 25	:invoke	:broadcast	13
2025-04-20 18:03:25,762{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 25 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 13, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 13, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:25,765{GMT}	INFO	[jepsen worker 0] jepsen.util: 26	:invoke	:broadcast	14
2025-04-20 18:03:25,774{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 26 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 14, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 14, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:25,779{GMT}	INFO	[jepsen worker 0] jepsen.util: 27	:invoke	:read	nil
2025-04-20 18:03:25,788{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 27 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:25,861{GMT}	INFO	[jepsen worker 0] jepsen.util: 28	:invoke	:read	nil
2025-04-20 18:03:25,871{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 28 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:25,872{GMT}	INFO	[jepsen worker 0] jepsen.util: 29	:invoke	:read	nil
2025-04-20 18:03:25,883{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 29 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:25,962{GMT}	INFO	[jepsen worker 0] jepsen.util: 30	:invoke	:broadcast	15
2025-04-20 18:03:25,970{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 30 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 15, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 15, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:26,089{GMT}	INFO	[jepsen worker 0] jepsen.util: 31	:invoke	:read	nil
2025-04-20 18:03:26,098{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 31 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:26,212{GMT}	INFO	[jepsen worker 0] jepsen.util: 32	:invoke	:broadcast	16
2025-04-20 18:03:26,221{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 32 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 16, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 16, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:26,403{GMT}	INFO	[jepsen worker 0] jepsen.util: 33	:invoke	:broadcast	17
2025-04-20 18:03:26,411{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 33 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 17, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 17, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:26,467{GMT}	INFO	[jepsen worker 0] jepsen.util: 34	:invoke	:read	nil
2025-04-20 18:03:26,475{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 34 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:26,527{GMT}	INFO	[jepsen worker 0] jepsen.util: 35	:invoke	:broadcast	18
2025-04-20 18:03:26,536{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 35 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 18, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 18, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:26,583{GMT}	INFO	[jepsen worker 0] jepsen.util: 36	:invoke	:read	nil
2025-04-20 18:03:26,592{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 36 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:26,714{GMT}	INFO	[jepsen worker 0] jepsen.util: 37	:invoke	:broadcast	19
2025-04-20 18:03:26,720{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 37 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 19, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 19, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:26,734{GMT}	INFO	[jepsen worker 0] jepsen.util: 38	:invoke	:read	nil
2025-04-20 18:03:26,743{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 38 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:26,744{GMT}	INFO	[jepsen worker 0] jepsen.util: 39	:invoke	:broadcast	20
2025-04-20 18:03:26,752{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 39 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 20, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 20, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:26,755{GMT}	INFO	[jepsen worker 0] jepsen.util: 40	:invoke	:read	nil
2025-04-20 18:03:26,763{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 40 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:26,922{GMT}	INFO	[jepsen worker 0] jepsen.util: 41	:invoke	:read	nil
2025-04-20 18:03:26,931{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 41 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:26,932{GMT}	INFO	[jepsen worker 0] jepsen.util: 42	:invoke	:read	nil
2025-04-20 18:03:26,938{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 42 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:27,040{GMT}	INFO	[jepsen worker 0] jepsen.util: 43	:invoke	:read	nil
2025-04-20 18:03:27,049{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 43 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:27,128{GMT}	INFO	[jepsen worker 0] jepsen.util: 44	:invoke	:broadcast	21
2025-04-20 18:03:27,136{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 44 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 21, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 21, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:27,156{GMT}	INFO	[jepsen worker 0] jepsen.util: 45	:invoke	:broadcast	22
2025-04-20 18:03:27,161{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 45 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 22, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 22, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:27,315{GMT}	INFO	[jepsen worker 0] jepsen.util: 46	:invoke	:read	nil
2025-04-20 18:03:27,320{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 46 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:27,443{GMT}	INFO	[jepsen worker 0] jepsen.util: 47	:invoke	:read	nil
2025-04-20 18:03:27,448{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 47 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:27,521{GMT}	INFO	[jepsen worker 0] jepsen.util: 48	:invoke	:read	nil
2025-04-20 18:03:27,530{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 48 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:27,607{GMT}	INFO	[jepsen worker 0] jepsen.util: 49	:invoke	:read	nil
2025-04-20 18:03:27,616{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 49 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:27,767{GMT}	INFO	[jepsen worker 0] jepsen.util: 50	:invoke	:read	nil
2025-04-20 18:03:27,775{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 50 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:27,963{GMT}	INFO	[jepsen worker 0] jepsen.util: 51	:invoke	:read	nil
2025-04-20 18:03:27,971{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 51 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:28,035{GMT}	INFO	[jepsen worker 0] jepsen.util: 52	:invoke	:read	nil
2025-04-20 18:03:28,042{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 52 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:28,232{GMT}	INFO	[jepsen worker 0] jepsen.util: 53	:invoke	:broadcast	23
2025-04-20 18:03:28,242{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 53 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 23, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 23, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:28,345{GMT}	INFO	[jepsen worker 0] jepsen.util: 54	:invoke	:broadcast	24
2025-04-20 18:03:28,350{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 54 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 24, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 24, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:28,492{GMT}	INFO	[jepsen worker 0] jepsen.util: 55	:invoke	:read	nil
2025-04-20 18:03:28,496{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 55 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:28,561{GMT}	INFO	[jepsen worker 0] jepsen.util: 56	:invoke	:broadcast	25
2025-04-20 18:03:28,565{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 56 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 25, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 25, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:28,755{GMT}	INFO	[jepsen worker 0] jepsen.util: 57	:invoke	:broadcast	26
2025-04-20 18:03:28,762{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 57 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 26, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 26, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:28,847{GMT}	INFO	[jepsen worker 0] jepsen.util: 58	:invoke	:broadcast	27
2025-04-20 18:03:28,854{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 58 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 27, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 27, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:28,974{GMT}	INFO	[jepsen worker 0] jepsen.util: 59	:invoke	:read	nil
2025-04-20 18:03:28,978{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 59 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:29,128{GMT}	INFO	[jepsen worker 0] jepsen.util: 60	:invoke	:read	nil
2025-04-20 18:03:29,132{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 60 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:29,206{GMT}	INFO	[jepsen worker 0] jepsen.util: 61	:invoke	:read	nil
2025-04-20 18:03:29,213{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 61 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:29,259{GMT}	INFO	[jepsen worker 0] jepsen.util: 62	:invoke	:broadcast	28
2025-04-20 18:03:29,266{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 62 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 28, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 28, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:29,308{GMT}	INFO	[jepsen worker 0] jepsen.util: 63	:invoke	:broadcast	29
2025-04-20 18:03:29,318{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 63 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 29, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 29, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:29,323{GMT}	INFO	[jepsen worker 0] jepsen.util: 64	:invoke	:broadcast	30
2025-04-20 18:03:29,328{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 64 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 30, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 30, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:29,341{GMT}	INFO	[jepsen worker 0] jepsen.util: 65	:invoke	:broadcast	31
2025-04-20 18:03:29,346{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 65 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 31, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 31, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:29,458{GMT}	INFO	[jepsen worker 0] jepsen.util: 66	:invoke	:broadcast	32
2025-04-20 18:03:29,466{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 66 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 32, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 32, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:29,467{GMT}	INFO	[jepsen worker 0] jepsen.util: 67	:invoke	:broadcast	33
2025-04-20 18:03:29,474{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 67 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 33, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 33, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:29,622{GMT}	INFO	[jepsen worker 0] jepsen.util: 68	:invoke	:read	nil
2025-04-20 18:03:29,630{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 68 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:29,740{GMT}	INFO	[jepsen worker 0] jepsen.util: 69	:invoke	:read	nil
2025-04-20 18:03:29,747{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 69 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:29,754{GMT}	INFO	[jepsen worker 0] jepsen.util: 70	:invoke	:broadcast	34
2025-04-20 18:03:29,760{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 70 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 34, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 34, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:29,938{GMT}	INFO	[jepsen worker 0] jepsen.util: 71	:invoke	:broadcast	35
2025-04-20 18:03:29,942{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 71 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 35, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 35, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:30,073{GMT}	INFO	[jepsen worker 0] jepsen.util: 72	:invoke	:broadcast	36
2025-04-20 18:03:30,078{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 72 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 36, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 36, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:30,127{GMT}	INFO	[jepsen worker 0] jepsen.util: 73	:invoke	:read	nil
2025-04-20 18:03:30,132{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 73 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:30,228{GMT}	INFO	[jepsen worker 0] jepsen.util: 74	:invoke	:broadcast	37
2025-04-20 18:03:30,234{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 74 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 37, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 37, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:30,392{GMT}	INFO	[jepsen worker 0] jepsen.util: 75	:invoke	:broadcast	38
2025-04-20 18:03:30,395{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 75 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 38, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 38, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:30,568{GMT}	INFO	[jepsen worker 0] jepsen.util: 76	:invoke	:read	nil
2025-04-20 18:03:30,575{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 76 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:30,759{GMT}	INFO	[jepsen worker 0] jepsen.util: 77	:invoke	:read	nil
2025-04-20 18:03:30,767{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 77 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:30,773{GMT}	INFO	[jepsen worker 0] jepsen.util: 78	:invoke	:read	nil
2025-04-20 18:03:30,780{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 78 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:30,961{GMT}	INFO	[jepsen worker 0] jepsen.util: 79	:invoke	:broadcast	39
2025-04-20 18:03:30,968{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 79 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 39, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 39, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:30,991{GMT}	INFO	[jepsen worker 0] jepsen.util: 80	:invoke	:read	nil
2025-04-20 18:03:30,998{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 80 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:31,149{GMT}	INFO	[jepsen worker 0] jepsen.util: 81	:invoke	:read	nil
2025-04-20 18:03:31,157{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 81 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:31,318{GMT}	INFO	[jepsen worker 0] jepsen.util: 82	:invoke	:broadcast	40
2025-04-20 18:03:31,324{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 82 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 40, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 40, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:31,325{GMT}	INFO	[jepsen worker 0] jepsen.util: 83	:invoke	:read	nil
2025-04-20 18:03:31,332{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 83 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:31,456{GMT}	INFO	[jepsen worker 0] jepsen.util: 84	:invoke	:broadcast	41
2025-04-20 18:03:31,461{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 84 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 41, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 41, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:31,573{GMT}	INFO	[jepsen worker 0] jepsen.util: 85	:invoke	:broadcast	42
2025-04-20 18:03:31,580{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 85 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 42, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 42, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:31,725{GMT}	INFO	[jepsen worker 0] jepsen.util: 86	:invoke	:read	nil
2025-04-20 18:03:31,733{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 86 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:31,785{GMT}	INFO	[jepsen worker 0] jepsen.util: 87	:invoke	:broadcast	43
2025-04-20 18:03:31,791{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 87 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 43, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 43, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:31,914{GMT}	INFO	[jepsen worker 0] jepsen.util: 88	:invoke	:broadcast	44
2025-04-20 18:03:31,921{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 88 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 44, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 44, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:31,977{GMT}	INFO	[jepsen worker 0] jepsen.util: 89	:invoke	:read	nil
2025-04-20 18:03:31,984{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 89 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:32,020{GMT}	INFO	[jepsen worker 0] jepsen.util: 90	:invoke	:broadcast	45
2025-04-20 18:03:32,023{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 90 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 45, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 45, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:32,057{GMT}	INFO	[jepsen worker 0] jepsen.util: 91	:invoke	:broadcast	46
2025-04-20 18:03:32,060{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 91 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 46, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 46, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:32,207{GMT}	INFO	[jepsen worker 0] jepsen.util: 92	:invoke	:broadcast	47
2025-04-20 18:03:32,211{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 92 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 47, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 47, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:32,249{GMT}	INFO	[jepsen worker 0] jepsen.util: 93	:invoke	:read	nil
2025-04-20 18:03:32,254{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 93 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:32,363{GMT}	INFO	[jepsen worker 0] jepsen.util: 94	:invoke	:read	nil
2025-04-20 18:03:32,370{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 94 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:32,396{GMT}	INFO	[jepsen worker 0] jepsen.util: 95	:invoke	:broadcast	48
2025-04-20 18:03:32,403{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 95 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 48, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 48, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:32,412{GMT}	INFO	[jepsen worker 0] jepsen.util: 96	:invoke	:broadcast	49
2025-04-20 18:03:32,420{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 96 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 49, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 49, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:32,436{GMT}	INFO	[jepsen worker 0] jepsen.util: 97	:invoke	:broadcast	50
2025-04-20 18:03:32,440{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 97 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 50, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 50, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:32,504{GMT}	INFO	[jepsen worker 0] jepsen.util: 98	:invoke	:broadcast	51
2025-04-20 18:03:32,507{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 98 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 51, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 51, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:32,508{GMT}	INFO	[jepsen worker 0] jepsen.util: 99	:invoke	:read	nil
2025-04-20 18:03:32,511{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 99 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:32,652{GMT}	INFO	[jepsen worker 0] jepsen.util: 100	:invoke	:read	nil
2025-04-20 18:03:32,658{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 100 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:32,832{GMT}	INFO	[jepsen worker 0] jepsen.util: 101	:invoke	:read	nil
2025-04-20 18:03:32,840{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 101 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:32,974{GMT}	INFO	[jepsen worker 0] jepsen.util: 102	:invoke	:broadcast	52
2025-04-20 18:03:32,982{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 102 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 52, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 52, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:33,041{GMT}	INFO	[jepsen worker 0] jepsen.util: 103	:invoke	:read	nil
2025-04-20 18:03:33,049{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 103 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:33,136{GMT}	INFO	[jepsen worker 0] jepsen.util: 104	:invoke	:broadcast	53
2025-04-20 18:03:33,140{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 104 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 53, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 53, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:33,240{GMT}	INFO	[jepsen worker 0] jepsen.util: 105	:invoke	:broadcast	54
2025-04-20 18:03:33,247{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 105 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 54, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 54, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:33,333{GMT}	INFO	[jepsen worker 0] jepsen.util: 106	:invoke	:broadcast	55
2025-04-20 18:03:33,336{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 106 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 55, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 55, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:33,484{GMT}	INFO	[jepsen worker 0] jepsen.util: 107	:invoke	:read	nil
2025-04-20 18:03:33,488{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 107 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:33,536{GMT}	INFO	[jepsen worker 0] jepsen.util: 108	:invoke	:broadcast	56
2025-04-20 18:03:33,540{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 108 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 56, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 56, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:33,631{GMT}	INFO	[jepsen worker 0] jepsen.util: 109	:invoke	:read	nil
2025-04-20 18:03:33,635{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 109 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:33,801{GMT}	INFO	[jepsen worker 0] jepsen.util: 110	:invoke	:read	nil
2025-04-20 18:03:33,805{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 110 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:33,842{GMT}	INFO	[jepsen worker 0] jepsen.util: 111	:invoke	:read	nil
2025-04-20 18:03:33,846{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 111 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:34,013{GMT}	INFO	[jepsen worker 0] jepsen.util: 112	:invoke	:read	nil
2025-04-20 18:03:34,017{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 112 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:34,084{GMT}	INFO	[jepsen worker 0] jepsen.util: 113	:invoke	:broadcast	57
2025-04-20 18:03:34,091{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 113 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 57, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 57, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:34,098{GMT}	INFO	[jepsen worker 0] jepsen.util: 114	:invoke	:broadcast	58
2025-04-20 18:03:34,103{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 114 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 58, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 58, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:34,207{GMT}	INFO	[jepsen worker 0] jepsen.util: 115	:invoke	:broadcast	59
2025-04-20 18:03:34,214{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 115 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 59, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 59, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:34,290{GMT}	INFO	[jepsen worker 0] jepsen.util: 116	:invoke	:broadcast	60
2025-04-20 18:03:34,295{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 116 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 60, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 60, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:34,390{GMT}	INFO	[jepsen worker 0] jepsen.util: 117	:invoke	:read	nil
2025-04-20 18:03:34,396{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 117 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:34,529{GMT}	INFO	[jepsen worker 0] jepsen.util: 118	:invoke	:broadcast	61
2025-04-20 18:03:34,535{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 118 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 61, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 61, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:34,616{GMT}	INFO	[jepsen worker 0] jepsen.util: 119	:invoke	:read	nil
2025-04-20 18:03:34,623{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 119 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:34,786{GMT}	INFO	[jepsen worker 0] jepsen.util: 120	:invoke	:read	nil
2025-04-20 18:03:34,791{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 120 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:34,917{GMT}	INFO	[jepsen worker 0] jepsen.util: 121	:invoke	:broadcast	62
2025-04-20 18:03:34,923{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 121 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 62, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 62, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:35,024{GMT}	INFO	[jepsen worker 0] jepsen.util: 122	:invoke	:read	nil
2025-04-20 18:03:35,030{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 122 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:35,204{GMT}	INFO	[jepsen worker 0] jepsen.util: 123	:invoke	:read	nil
2025-04-20 18:03:35,210{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 123 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:35,367{GMT}	INFO	[jepsen worker 0] jepsen.util: 124	:invoke	:read	nil
2025-04-20 18:03:35,374{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 124 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:35,521{GMT}	INFO	[jepsen worker 0] jepsen.util: 125	:invoke	:broadcast	63
2025-04-20 18:03:35,528{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 125 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 63, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 63, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:35,548{GMT}	INFO	[jepsen worker 0] jepsen.util: 126	:invoke	:read	nil
2025-04-20 18:03:35,553{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 126 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:35,724{GMT}	INFO	[jepsen worker 0] jepsen.util: 127	:invoke	:read	nil
2025-04-20 18:03:35,728{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 127 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:35,912{GMT}	INFO	[jepsen worker 0] jepsen.util: 128	:invoke	:read	nil
2025-04-20 18:03:35,915{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 128 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:36,025{GMT}	INFO	[jepsen worker 0] jepsen.util: 129	:invoke	:read	nil
2025-04-20 18:03:36,028{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 129 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:36,146{GMT}	INFO	[jepsen worker 0] jepsen.util: 130	:invoke	:read	nil
2025-04-20 18:03:36,150{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 130 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:36,213{GMT}	INFO	[jepsen worker 0] jepsen.util: 131	:invoke	:read	nil
2025-04-20 18:03:36,219{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 131 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:36,255{GMT}	INFO	[jepsen worker 0] jepsen.util: 132	:invoke	:broadcast	64
2025-04-20 18:03:36,262{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 132 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 64, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 64, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:36,354{GMT}	INFO	[jepsen worker 0] jepsen.util: 133	:invoke	:broadcast	65
2025-04-20 18:03:36,360{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 133 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 65, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 65, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:36,528{GMT}	INFO	[jepsen worker 0] jepsen.util: 134	:invoke	:broadcast	66
2025-04-20 18:03:36,532{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 134 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 66, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 66, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:36,664{GMT}	INFO	[jepsen worker 0] jepsen.util: 135	:invoke	:read	nil
2025-04-20 18:03:36,671{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 135 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:36,718{GMT}	INFO	[jepsen worker 0] jepsen.util: 136	:invoke	:read	nil
2025-04-20 18:03:36,725{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 136 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:36,858{GMT}	INFO	[jepsen worker 0] jepsen.util: 137	:invoke	:broadcast	67
2025-04-20 18:03:36,864{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 137 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 67, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 67, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:37,023{GMT}	INFO	[jepsen worker 0] jepsen.util: 138	:invoke	:broadcast	68
2025-04-20 18:03:37,027{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 138 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 68, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 68, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:37,187{GMT}	INFO	[jepsen worker 0] jepsen.util: 139	:invoke	:broadcast	69
2025-04-20 18:03:37,194{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 139 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 69, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 69, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:37,376{GMT}	INFO	[jepsen worker 0] jepsen.util: 140	:invoke	:read	nil
2025-04-20 18:03:37,383{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 140 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:37,384{GMT}	INFO	[jepsen worker 0] jepsen.util: 141	:invoke	:broadcast	70
2025-04-20 18:03:37,388{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 141 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 70, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 70, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:37,526{GMT}	INFO	[jepsen worker 0] jepsen.util: 142	:invoke	:read	nil
2025-04-20 18:03:37,532{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 142 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:37,607{GMT}	INFO	[jepsen worker 0] jepsen.util: 143	:invoke	:read	nil
2025-04-20 18:03:37,614{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 143 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:37,786{GMT}	INFO	[jepsen worker 0] jepsen.util: 144	:invoke	:read	nil
2025-04-20 18:03:37,792{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 144 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:37,912{GMT}	INFO	[jepsen worker 0] jepsen.util: 145	:invoke	:read	nil
2025-04-20 18:03:37,918{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 145 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:38,054{GMT}	INFO	[jepsen worker 0] jepsen.util: 146	:invoke	:read	nil
2025-04-20 18:03:38,061{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 146 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:38,152{GMT}	INFO	[jepsen worker 0] jepsen.util: 147	:invoke	:broadcast	71
2025-04-20 18:03:38,155{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 147 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 71, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 71, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:38,188{GMT}	INFO	[jepsen worker 0] jepsen.util: 148	:invoke	:broadcast	72
2025-04-20 18:03:38,194{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 148 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 72, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 72, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:38,305{GMT}	INFO	[jepsen worker 0] jepsen.util: 149	:invoke	:read	nil
2025-04-20 18:03:38,312{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 149 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:38,427{GMT}	INFO	[jepsen worker 0] jepsen.util: 150	:invoke	:broadcast	73
2025-04-20 18:03:38,433{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 150 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 73, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 73, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:38,625{GMT}	INFO	[jepsen worker 0] jepsen.util: 151	:invoke	:broadcast	74
2025-04-20 18:03:38,630{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 151 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 74, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 74, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:38,700{GMT}	INFO	[jepsen worker 0] jepsen.util: 152	:invoke	:broadcast	75
2025-04-20 18:03:38,706{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 152 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 75, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 75, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:38,797{GMT}	INFO	[jepsen worker 0] jepsen.util: 153	:invoke	:broadcast	76
2025-04-20 18:03:38,803{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 153 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 76, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 76, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:38,975{GMT}	INFO	[jepsen worker 0] jepsen.util: 154	:invoke	:read	nil
2025-04-20 18:03:38,981{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 154 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:39,049{GMT}	INFO	[jepsen worker 0] jepsen.util: 155	:invoke	:read	nil
2025-04-20 18:03:39,053{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 155 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:39,115{GMT}	INFO	[jepsen worker 0] jepsen.util: 156	:invoke	:read	nil
2025-04-20 18:03:39,122{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 156 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:39,280{GMT}	INFO	[jepsen worker 0] jepsen.util: 157	:invoke	:read	nil
2025-04-20 18:03:39,286{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 157 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:39,369{GMT}	INFO	[jepsen worker 0] jepsen.util: 158	:invoke	:broadcast	77
2025-04-20 18:03:39,375{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 158 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 77, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 77, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:39,422{GMT}	INFO	[jepsen worker 0] jepsen.util: 159	:invoke	:read	nil
2025-04-20 18:03:39,429{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 159 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:39,469{GMT}	INFO	[jepsen worker 0] jepsen.util: 160	:invoke	:read	nil
2025-04-20 18:03:39,475{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 160 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:39,648{GMT}	INFO	[jepsen worker 0] jepsen.util: 161	:invoke	:read	nil
2025-04-20 18:03:39,654{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 161 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:39,739{GMT}	INFO	[jepsen worker 0] jepsen.util: 162	:invoke	:read	nil
2025-04-20 18:03:39,745{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 162 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:39,804{GMT}	INFO	[jepsen worker 0] jepsen.util: 163	:invoke	:broadcast	78
2025-04-20 18:03:39,810{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 163 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 78, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 78, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:39,858{GMT}	INFO	[jepsen worker 0] jepsen.util: 164	:invoke	:broadcast	79
2025-04-20 18:03:39,862{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 164 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 79, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 79, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:39,863{GMT}	INFO	[jepsen worker 0] jepsen.util: 165	:invoke	:broadcast	80
2025-04-20 18:03:39,866{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 165 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 80, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 80, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:39,955{GMT}	INFO	[jepsen worker 0] jepsen.util: 166	:invoke	:broadcast	81
2025-04-20 18:03:39,958{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 166 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 81, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 81, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:40,148{GMT}	INFO	[jepsen worker 0] jepsen.util: 167	:invoke	:broadcast	82
2025-04-20 18:03:40,151{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 167 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 82, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 82, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:40,257{GMT}	INFO	[jepsen worker 0] jepsen.util: 168	:invoke	:broadcast	83
2025-04-20 18:03:40,260{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 168 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 83, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 83, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:40,298{GMT}	INFO	[jepsen worker 0] jepsen.util: 169	:invoke	:broadcast	84
2025-04-20 18:03:40,301{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 169 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 84, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 84, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:40,475{GMT}	INFO	[jepsen worker 0] jepsen.util: 170	:invoke	:broadcast	85
2025-04-20 18:03:40,478{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 170 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 85, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 85, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:40,648{GMT}	INFO	[jepsen worker 0] jepsen.util: 171	:invoke	:read	nil
2025-04-20 18:03:40,655{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 171 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:40,784{GMT}	INFO	[jepsen worker 0] jepsen.util: 172	:invoke	:read	nil
2025-04-20 18:03:40,790{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 172 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:40,811{GMT}	INFO	[jepsen worker 0] jepsen.util: 173	:invoke	:read	nil
2025-04-20 18:03:40,818{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 173 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:40,986{GMT}	INFO	[jepsen worker 0] jepsen.util: 174	:invoke	:broadcast	86
2025-04-20 18:03:40,989{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 174 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 86, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 86, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:41,170{GMT}	INFO	[jepsen worker 0] jepsen.util: 175	:invoke	:read	nil
2025-04-20 18:03:41,173{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 175 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:41,264{GMT}	INFO	[jepsen worker 0] jepsen.util: 176	:invoke	:read	nil
2025-04-20 18:03:41,269{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 176 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:41,327{GMT}	INFO	[jepsen worker 0] jepsen.util: 177	:invoke	:read	nil
2025-04-20 18:03:41,333{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 177 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:41,448{GMT}	INFO	[jepsen worker 0] jepsen.util: 178	:invoke	:read	nil
2025-04-20 18:03:41,454{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 178 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:41,472{GMT}	INFO	[jepsen worker 0] jepsen.util: 179	:invoke	:broadcast	87
2025-04-20 18:03:41,480{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 179 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 87, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 87, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:41,614{GMT}	INFO	[jepsen worker 0] jepsen.util: 180	:invoke	:broadcast	88
2025-04-20 18:03:41,619{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 180 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 88, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 88, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:41,730{GMT}	INFO	[jepsen worker 0] jepsen.util: 181	:invoke	:broadcast	89
2025-04-20 18:03:41,736{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 181 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 89, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 89, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:41,754{GMT}	INFO	[jepsen worker 0] jepsen.util: 182	:invoke	:broadcast	90
2025-04-20 18:03:41,760{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 182 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 90, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 90, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:41,833{GMT}	INFO	[jepsen worker 0] jepsen.util: 183	:invoke	:read	nil
2025-04-20 18:03:41,839{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 183 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:41,988{GMT}	INFO	[jepsen worker 0] jepsen.util: 184	:invoke	:read	nil
2025-04-20 18:03:41,995{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 184 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:42,067{GMT}	INFO	[jepsen worker 0] jepsen.util: 185	:invoke	:broadcast	91
2025-04-20 18:03:42,073{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 185 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 91, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 91, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:42,184{GMT}	INFO	[jepsen worker 0] jepsen.util: 186	:invoke	:broadcast	92
2025-04-20 18:03:42,191{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 186 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 92, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 92, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:42,365{GMT}	INFO	[jepsen worker 0] jepsen.util: 187	:invoke	:read	nil
2025-04-20 18:03:42,372{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 187 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:42,537{GMT}	INFO	[jepsen worker 0] jepsen.util: 188	:invoke	:broadcast	93
2025-04-20 18:03:42,544{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 188 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 93, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 93, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:42,691{GMT}	INFO	[jepsen worker 0] jepsen.util: 189	:invoke	:broadcast	94
2025-04-20 18:03:42,697{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 189 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 94, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 94, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:42,740{GMT}	INFO	[jepsen worker 0] jepsen.util: 190	:invoke	:read	nil
2025-04-20 18:03:42,746{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 190 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:42,910{GMT}	INFO	[jepsen worker 0] jepsen.util: 191	:invoke	:read	nil
2025-04-20 18:03:42,917{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 191 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:42,943{GMT}	INFO	[jepsen worker 0] jepsen.util: 192	:invoke	:broadcast	95
2025-04-20 18:03:42,949{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 192 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 95, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 95, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:43,057{GMT}	INFO	[jepsen worker 0] jepsen.util: 193	:invoke	:read	nil
2025-04-20 18:03:43,062{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 193 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:43,234{GMT}	INFO	[jepsen worker 0] jepsen.util: 194	:invoke	:broadcast	96
2025-04-20 18:03:43,240{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 194 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 96, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 96, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:43,323{GMT}	INFO	[jepsen worker 0] jepsen.util: 195	:invoke	:broadcast	97
2025-04-20 18:03:43,330{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 195 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 97, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 97, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:43,438{GMT}	INFO	[jepsen worker 0] jepsen.util: 196	:invoke	:broadcast	98
2025-04-20 18:03:43,445{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 196 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 98, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 98, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:43,490{GMT}	INFO	[jepsen worker 0] jepsen.util: 197	:invoke	:broadcast	99
2025-04-20 18:03:43,496{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 197 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "broadcast", :message 99, :msg_id 1}

And expected a response of the form:

{:type (eq "broadcast_ok"), {:k :msg_id} Int, :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message 99, :msg_id 1, :type "broadcast_ok"}

This is malformed because:

{:message disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$fn__17063$broadcast_BANG___17064.invoke(broadcast.clj:27)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:203)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:43,564{GMT}	INFO	[jepsen worker 0] jepsen.util: 198	:invoke	:read	nil
2025-04-20 18:03:43,571{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 198 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:43,620{GMT}	INFO	[jepsen worker 0] jepsen.util: 199	:invoke	:read	nil
2025-04-20 18:03:43,626{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 199 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:43,627{GMT}	INFO	[jepsen worker 0] jepsen.generator.interpreter: Waiting for recovery...
2025-04-20 18:03:53,630{GMT}	INFO	[jepsen worker 0] jepsen.util: 200	:invoke	:read	nil
2025-04-20 18:03:53,637{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 200 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :messages {}, :msg_id 1, :type "read_ok"}

This is malformed because:

{:messages (not (sequential? {}))}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__17074$read__17075.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__17142.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:87)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__13749.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5842.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-04-20 18:03:53,658{GMT}	INFO	[jepsen test runner] jepsen.core: Run complete, writing
2025-04-20 18:03:53,789{GMT}	INFO	[jepsen node n0] maelstrom.db: Tearing down n0
2025-04-20 18:03:54,713{GMT}	INFO	[jepsen node n0] maelstrom.net: Shutting down Maelstrom network
2025-04-20 18:03:54,714{GMT}	INFO	[jepsen test runner] jepsen.core: Analyzing...
2025-04-20 18:03:54,941{GMT}	INFO	[jepsen test runner] jepsen.core: Analysis complete
2025-04-20 18:03:54,958{GMT}	INFO	[jepsen results] jepsen.store: Wrote /home/divi/git/fly.io/store/broadcast/20250420T180321.940+0530/results.edn
2025-04-20 18:03:54,975{GMT}	INFO	[jepsen test runner] jepsen.core: {:perf {:latency-graph {:valid? true},
        :rate-graph {:valid? true},
        :valid? true},
 :timeline {:valid? true},
 :exceptions {:valid? true,
              :exceptions ({:count 201,
                            :class clojure.lang.ExceptionInfo,
                            :example #jepsen.history.Op{:index 1,
                                                        :time 39577056,
                                                        :type :info,
                                                        :process 0,
                                                        :f :read,
                                                        :value nil,
                                                        :exception {:via [{:type clojure.lang.ExceptionInfo,
                                                                           :message "Malformed RPC response. Maelstrom sent node n0 the following request:\n\n{:type \"read\", :msg_id 1}\n\nAnd expected a response of the form:\n\n{:type (eq \"read_ok\"),\n :messages [Any],\n {:k :msg_id} Int,\n :in_reply_to Int}\n\n... but instead received\n\n{:in_reply_to 1, :messages {}, :msg_id 1, :type \"read_ok\"}\n\nThis is malformed because:\n\n{:messages (not (sequential? {}))}\n\nSee doc/protocol.md for more guidance.",
                                                                           :data {:type :malformed-rpc-response,
                                                                                  :body {:in_reply_to 1,
                                                                                         :messages {},
                                                                                         :msg_id 1,
                                                                                         :type "read_ok"}},
                                                                           :at [slingshot.support$stack_trace
                                                                                invoke
                                                                                "support.clj"
                                                                                201]}],
                                                                    :trace [[slingshot.support$stack_trace
                                                                             invoke
                                                                             "support.clj"
                                                                             201]
                                                                            [maelstrom.client$check_body
                                                                             invokeStatic
                                                                             "client.clj"
                                                                             188]
                                                                            [maelstrom.client$check_body
                                                                             invoke
                                                                             "client.clj"
                                                                             181]
                                                                            [maelstrom.workload.broadcast$fn__17074$read__17075
                                                                             invoke
                                                                             "broadcast.clj"
                                                                             34]
                                                                            [maelstrom.workload.broadcast$fn__17074$read__17075
                                                                             invoke
                                                                             "broadcast.clj"
                                                                             34]
                                                                            [maelstrom.workload.broadcast$client$reify__17142
                                                                             invoke_BANG_
                                                                             "broadcast.clj"
                                                                             207]
                                                                            [jepsen.client.Validate
                                                                             invoke_BANG_
                                                                             "client.clj"
                                                                             87]
                                                                            [jepsen.generator.interpreter.ClientWorker
                                                                             invoke_BANG_
                                                                             "interpreter.clj"
                                                                             65]
                                                                            [jepsen.generator.interpreter$spawn_worker$fn__13749$fn__13750
                                                                             invoke
                                                                             "interpreter.clj"
                                                                             140]
                                                                            [jepsen.generator.interpreter$spawn_worker$fn__13749
                                                                             invoke
                                                                             "interpreter.clj"
                                                                             123]
                                                                            [clojure.core$binding_conveyor_fn$fn__5842
                                                                             invoke
                                                                             "core.clj"
                                                                             2047]
                                                                            [clojure.lang.AFn
                                                                             call
                                                                             "AFn.java"
                                                                             18]
                                                                            [java.util.concurrent.FutureTask
                                                                             run
                                                                             "FutureTask.java"
                                                                             264]
                                                                            [java.util.concurrent.ThreadPoolExecutor
                                                                             runWorker
                                                                             "ThreadPoolExecutor.java"
                                                                             1136]
                                                                            [java.util.concurrent.ThreadPoolExecutor$Worker
                                                                             run
                                                                             "ThreadPoolExecutor.java"
                                                                             635]
                                                                            [java.lang.Thread
                                                                             run
                                                                             "Thread.java"
                                                                             840]],
                                                                    :cause "Malformed RPC response. Maelstrom sent node n0 the following request:\n\n{:type \"read\", :msg_id 1}\n\nAnd expected a response of the form:\n\n{:type (eq \"read_ok\"),\n :messages [Any],\n {:k :msg_id} Int,\n :in_reply_to Int}\n\n... but instead received\n\n{:in_reply_to 1, :messages {}, :msg_id 1, :type \"read_ok\"}\n\nThis is malformed because:\n\n{:messages (not (sequential? {}))}\n\nSee doc/protocol.md for more guidance.",
                                                                    :data {:type :malformed-rpc-response,
                                                                           :body {:in_reply_to 1,
                                                                                  :messages {},
                                                                                  :msg_id 1,
                                                                                  :type "read_ok"}}},
                                                        :error "indeterminate: Malformed RPC response. Maelstrom sent node n0 the following request:\n\n{:type \"read\", :msg_id 1}\n\nAnd expected a response of the form:\n\n{:type (eq \"read_ok\"),\n :messages [Any],\n {:k :msg_id} Int,\n :in_reply_to Int}\n\n... but instead received\n\n{:in_reply_to 1, :messages {}, :msg_id 1, :type \"read_ok\"}\n\nThis is malformed because:\n\n{:messages (not (sequential? {}))}\n\nSee doc/protocol.md for more guidance."}})},
 :stats {:valid? false,
         :count 201,
         :ok-count 0,
         :fail-count 0,
         :info-count 201,
         :by-f {:broadcast {:valid? false,
                            :count 100,
                            :ok-count 0,
                            :fail-count 0,
                            :info-count 100},
                :read {:valid? false,
                       :count 101,
                       :ok-count 0,
                       :fail-count 0,
                       :info-count 101}}},
 :availability {:valid? true, :ok-fraction 0.0},
 :net {:all {:send-count 406,
             :recv-count 406,
             :msg-count 406,
             :msgs-per-op 2.0199006},
       :clients {:send-count 406, :recv-count 406, :msg-count 406},
       :servers {:send-count 0,
                 :recv-count 0,
                 :msg-count 0,
                 :msgs-per-op 0.0},
       :valid? true},
 :workload {:worst-stale (),
            :duplicated-count 0,
            :valid? :unknown,
            :lost-count 0,
            :lost (),
            :stable-count 0,
            :stale-count 0,
            :stale (),
            :never-read-count 100,
            :attempt-count 100,
            :never-read (0
                         1
                         2
                         3
                         4
                         5
                         6
                         7
                         8
                         9
                         10
                         11
                         12
                         13
                         14
                         15
                         16
                         17
                         18
                         19
                         20
                         21
                         22
                         23
                         24
                         25
                         26
                         27
                         28
                         29
                         30
                         31
                         32
                         33
                         34
                         35
                         36
                         37
                         38
                         39
                         40
                         41
                         42
                         43
                         44
                         45
                         46
                         47
                         48
                         49
                         50
                         51
                         52
                         53
                         54
                         55
                         56
                         57
                         58
                         59
                         60
                         61
                         62
                         63
                         64
                         65
                         66
                         67
                         68
                         69
                         70
                         71
                         72
                         73
                         74
                         75
                         76
                         77
                         78
                         79
                         80
                         81
                         82
                         83
                         84
                         85
                         86
                         87
                         88
                         89
                         90
                         91
                         92
                         93
                         94
                         95
                         96
                         97
                         98
                         99),
            :duplicated {}},
 :valid? false}


Analysis invalid! (ﾉಥ益ಥ）ﾉ ┻━┻
